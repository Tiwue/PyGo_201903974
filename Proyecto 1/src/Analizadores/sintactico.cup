package analizadores; 
import java_cup.runtime.*;
import Estructuras.Nodo;
import Estructuras.Arbol;
import Estructuras.Produccion;
import Estructuras.Instrucciones.Operacion;
import Estructuras.Instrucciones.If;
import Estructuras.Instrucciones.While;
import Estructuras.Instrucciones.Instruccion;
import Estructuras.Instrucciones.Evaluar;
import java.util.LinkedList;
import Estructuras.*;

parser code 
{:
    /**
     * Variable en la que se almacena el arbol de sintaxis abstracta que se 
     * genera luego del analisis sintáctico.
     */
    public LinkedList<Instruccion> AST;
    public Arbol arbol;
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
        Interfaz.Principal.errores.addError(new Estructuras.MiError(tipoError.SINTACTICO, "Se detectó un error sintáctico ("+s.value+")", s.left, s.right));
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }  
    public Arbol getArbol() {
        return arbol;
    }
    public LinkedList<Instruccion> getAST() {
        return AST;
    }
:} 

terminal String PTCOMA,PARIZQ,PARDER,CORIZQ,CORDER,LLAVIZQ,LLAVDER;
terminal String MAS,MENOS,POR,DIVIDIDO;
terminal String MENQUE,MAYQUE;
terminal String AND;
terminal String ENTERO;
terminal String DECIMAL;
terminal String IGUAL;
terminal String UMENOS;
terminal String REVALUAR,RIF,RELSE,RMIENTRAS;

non terminal ini;
non terminal Produccion instrucciones;
non terminal Produccion instruccion;
non terminal Produccion expresion;
non terminal Produccion expresion_relacional;
non terminal Produccion else_ifs;

precedence left MAS,MENOS;
precedence left POR,DIVIDIDO;
precedence right UMENOS; 

start with ini; 

ini::=instrucciones:a                           {:
                                                    //se guarda el AST, que es la lista principal de instrucciones en la variable
                                                    //AST que se definió dentro del parser
                                                    parser.AST=a.getInstructions();
                                                    Nodo NODERAIZ = new Nodo("INIT"); NODERAIZ.addSon(a.getNode());
                                                    parser.arbol=new Arbol(NODERAIZ);
                                                :}
;

instrucciones ::= 
   instrucciones:a instruccion:b                {:
                                                    RESULT=new Produccion(new Nodo("Instrucciones"), a.getInstructions());
                                                    RESULT.addIns(b.getIns());
                                                    RESULT.addSon(a);
                                                    RESULT.addSon(b);
                                                :}
 | instruccion:a                                {:
                                                    RESULT=new Produccion(new Nodo("Instrucciones"), new LinkedList<>());
                                                    RESULT.addIns(a.getIns());
                                                    RESULT.addSon(a);
                                                :} 
; 

instruccion ::= 
   REVALUAR CORIZQ expresion:a CORDER PTCOMA    {:
                                                    RESULT=new Produccion(new Nodo("Instruccion"), new Evaluar((Operacion)a.getIns()));
                                                    RESULT.addSon("EVALUAR");
                                                    RESULT.addSon("[");
                                                    RESULT.addSon(a); 
                                                    RESULT.addSon("]");
                                                    RESULT.addSon(";");
                                                :}
 | RMIENTRAS    PARIZQ expresion_relacional:a PARDER LLAVIZQ instrucciones:b LLAVDER    {:
                                                                                        RESULT=new Produccion(new Nodo("Instruccion"), new While((Operacion)a.getIns(), b.getInstructions()));
                                                                                        RESULT.addSon("MIENTRAS");
                                                                                        RESULT.addSon("(");
                                                                                        RESULT.addSon(a);
                                                                                        RESULT.addSon(")");
                                                                                        RESULT.addSon("{");
                                                                                        RESULT.addSon(b);
                                                                                        RESULT.addSon("}");
                                                                                    :}
 | RIF PARIZQ expresion_relacional:a PARDER LLAVIZQ instrucciones:b LLAVDER                                                     {:
                                                                                                                                RESULT=new Produccion(new Nodo("Instruccion"), new If((Operacion)a.getIns(), a.getInstructions()));
                                                                                                                                RESULT.addSon("IF");
                                                                                                                                RESULT.addSon("(");
                                                                                                                                RESULT.addSon(a);
                                                                                                                                RESULT.addSon(")");
                                                                                                                                RESULT.addSon("{");
                                                                                                                                RESULT.addSon(b);
                                                                                                                                RESULT.addSon("}");
                                                                                                                            :} 
 | RIF PARIZQ expresion_relacional:a PARDER LLAVIZQ instrucciones:b LLAVDER else_ifs:l RELSE LLAVIZQ instrucciones:c LLAVDER    {:  
                                                                                                                                RESULT=new Produccion(new Nodo("Instruccion"), new If((Operacion)a.getIns(),b.getInstructions(),l.getInstructions(),c.getInstructions()));
                                                                                                                                RESULT.addSon("IF");
                                                                                                                                RESULT.addSon("(");
                                                                                                                                RESULT.addSon(a);
                                                                                                                                RESULT.addSon(")");
                                                                                                                                RESULT.addSon("{");
                                                                                                                                RESULT.addSon(b);
                                                                                                                                RESULT.addSon("}");
                                                                                                                                RESULT.addSon(l);
                                                                                                                                RESULT.addSon("ELSE");
                                                                                                                                RESULT.addSon("{");
                                                                                                                                RESULT.addSon(c);
                                                                                                                                RESULT.addSon("}");
                                                                                                                            :}
;

else_ifs ::= 
    else_ifs:l RELSE RIF PARIZQ expresion_relacional:a PARDER LLAVIZQ instrucciones:b LLAVDER                                {:                                                                                                                                
                                                                                                                                RESULT=new Produccion(new Nodo("ELSE_IFS"), l.getInstructions());
                                                                                                                                RESULT.addIns(new If((Operacion)a.getIns(), b.getInstructions()));
                                                                                                                                RESULT.addSon(l);
                                                                                                                                RESULT.addSon("ELSE");
                                                                                                                                RESULT.addSon("IF");
                                                                                                                                RESULT.addSon("(");
                                                                                                                                RESULT.addSon(a);
                                                                                                                                RESULT.addSon(")");
                                                                                                                                RESULT.addSon("{");
                                                                                                                                RESULT.addSon(b);
                                                                                                                                RESULT.addSon("}");
                                                                                                                            :}
  | RELSE RIF PARIZQ expresion_relacional:a PARDER LLAVIZQ instrucciones:b LLAVDER                                              {:  
                                                                                                                                RESULT=new Produccion(new Nodo("ELSE_IFS"), new LinkedList<>());
                                                                                                                                RESULT.addIns(new If((Operacion)a.getIns(), b.getInstructions()));
                                                                                                                                RESULT.addSon("ELSE");
                                                                                                                                RESULT.addSon("IF");
                                                                                                                                RESULT.addSon("(");
                                                                                                                                RESULT.addSon(a);
                                                                                                                                RESULT.addSon(")");
                                                                                                                                RESULT.addSon("{");
                                                                                                                                RESULT.addSon(b);
                                                                                                                                RESULT.addSon("}");
                                                                                                                            :}
;

expresion  ::= 
    MENOS expresion:a                           {:
                                                    RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),Operacion.Tipo_operacion.NEGATIVO));
                                                    RESULT.addSon("-");
                                                    RESULT.addSon(a);                                                
                                                :}%prec UMENOS     
 |  expresion:a MAS        expresion:b          {:
                                                    RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.SUMA));
                                                    RESULT.addSon(a);
                                                    RESULT.addSon("+");
                                                    RESULT.addSon(b);
                                                :}
 |  expresion:a MENOS      expresion:b          {:
                                                    RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.RESTA));
                                                    RESULT.addSon(a);
                                                    RESULT.addSon("-");
                                                    RESULT.addSon(b);
                                                :}
 |  expresion:a POR        expresion:b          {:
                                                    RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.MULTIPLICACION));
                                                    RESULT.addSon(a);
                                                    RESULT.addSon("*");
                                                    RESULT.addSon(b);
                                                :}
 |  expresion:a DIVIDIDO   expresion:b          {:                                                
                                                    RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.DIVISION));
                                                    RESULT.addSon(a);
                                                    RESULT.addSon("/");
                                                    RESULT.addSon(b);
                                                :}
 |  ENTERO:a                                    {:
                                                    RESULT=new Produccion(new Nodo(null, a), new Operacion(a,Operacion.Tipo_operacion.NUMERO));
                                                :}
 |  DECIMAL:a                                   {:
                                                    RESULT=new Produccion(new Nodo(null, a), new Operacion(a,Operacion.Tipo_operacion.NUMERO));
                                                :}
 |  PARIZQ expresion:a PARDER                   {:
                                                    RESULT=new Produccion(new Nodo("Expresion"), a.getIns());
                                                    RESULT.addSon("(");
                                                    RESULT.addSon(a);
                                                    RESULT.addSon(")");
                                                :}
;

expresion_relacional  ::= 
   expresion:a  MAYQUE   expresion:b            {:
                                                    RESULT=new Produccion(new Nodo("Expresion_Relacional"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(), Operacion.Tipo_operacion.MAYOR_QUE));
                                                    RESULT.addSon(a);
                                                    RESULT.addSon(">");
                                                    RESULT.addSon(b);
                                                :} 
 | expresion:a  MENQUE   expresion:b            {:
                                                    RESULT=new Produccion(new Nodo("Expresion_Relacional"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(), Operacion.Tipo_operacion.MENOR_QUE));
                                                    RESULT.addSon(a);
                                                    RESULT.addSon("<");
                                                    RESULT.addSon(b);
                                                :}  
;
